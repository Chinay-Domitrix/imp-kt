

// java interop time

struct Person {
    fname string
    lname string
}

val counter = "a"

func run(p int) {
    log(p)
}
func run(p float) {
    log(p)
}

struct StringClosure {
    t string
}

val iValue = 42

log(iValue)


val sValue = "iValue = "


func closureExample(env StringClosure, addVal int) {
    env.t = env.t + addVal
}

val env = new StringClosure(sValue)
closureExample(env, iValue)

log(sValue)
log(env.t)


//run(42)
//run(69.420)

//log(run)


// Todo: make this work
// val functionRef = run


func loadFromDatabase(success (str)=>void, failure (str)=>void) {
    if true {
        success("heheeheheh")
    } else {
        func("reeeee")
    }
}

func printSuccess(message str) {
    log(message)
}

func logError(message str) {
    log("Error: " + str)
}

loadFromDatabase(printSuccess, logError)




